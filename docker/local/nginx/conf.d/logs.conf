# use request_id if provided or generate the new one
map $http_request_id $local_request_id {
   default $request_id;
   ~* $http_request_id;
}

map $http_request_from $local_request_from {
   default 'nginx';
   ~* $http_request_from;
}

# real ip adress - remote_addr if x-real-ip not provided
map $http_x_real_ip $real_ip {
  '' $remote_addr;
  default $http_x_real_ip;
}

log_format main escape=json '{'
    '"time_local": "$time_local",'
    '"real_ip": "$real_ip",'
    '"request": "$request",'
    '"status": "$status",'
    '"body_bytes_sent": "$body_bytes_sent",'
    '"request_time": "$request_time",'
    '"request_id": "$local_request_id",'
    '"request_from": "$local_request_from",'
    '"http_x_forwarded_for": "$http_x_forwarded_for",'
    '"request_domain": "$host",'
    '"scheme": "$scheme",'
    '"content_length": "$content_length",'
    '"request_length": "$request_length",'
    '"remote_user": "$remote_user",'
    '"remote_addr": "$remote_addr",'
    '"remote_port": "$remote_port",'
    '"msec": "$msec",'
    '"http_referer": "$http_referer",'
    '"http_user_agent": "$http_user_agent",'
    '"upstream_cache_status": "$upstream_cache_status",'
    '"upstream_status": "$upstream_status",'
    '"upstream_addr": "$upstream_addr",'
    '"upstream_response_time": "$upstream_response_time",'
    '"uid_set": "$uid_set",'
    '"uid_got": "$uid_got",'
    '"connection": "$connection",'
    '"connection_requests": "$connection_requests",'
    '"http_cookie": "$http_cookie"'
'}';

error_log /dev/stderr;
access_log /dev/stdout main;
